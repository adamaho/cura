---
import type { HTMLAttributes } from "astro/types";

export interface Props extends HTMLAttributes<"button"> {
  size?: "sm" | "md" | "lg";
  variant?: 1 | 2 | 3;
  width?: "full";
}

const { size = "md", variant = 1, width, ...rest } = Astro.props;
---

<button
  {...rest}
  data-component="button"
  data-size={size}
  data-variant={variant}
  data-width={width}
>
  <slot />
</button>

<style>
  [data-component="button"] {
    [data-slot="label"] {
      font-weight: var(--c-fw-2);
      letter-spacing: -0.1px;
    }

    [data-component="kbd"] {
      font-family: var(--c-ff-sans);
      font-weight: var(--c-fw-2);
    }

    &[data-variant="1"] {
      background: var(--c-c-accent-9);
      border: var(--c-bw-1) solid var(--c-c-accent-11);
      box-shadow:
        0px 3px 0 -1px var(--c-c-accent-6),
        0px 3px 0 0px var(--c-c-accent-11);
      color: var(--c-c-accent-13);

      &:hover {
        background: var(--c-c-accent-10);
      }

      [data-component="kbd"] {
        background: var(--c-c-accent-13);
        color: var(--c-c-accent-9);
      }
    }

    &[data-variant="2"] {
      background: var(--c-c-accent-4);
      border: var(--c-bw-1) solid var(--c-c-accent-9);
      box-shadow:
        0px 3px 0 -1px var(--c-c-accent-11),
        0px 3px 0 0px var(--c-c-accent-8);
      color: var(--c-c-accent-12);

      &:hover {
        background: var(--c-c-accent-5);
      }

      [data-component="kbd"] {
        background: var(--c-c-accent-12);
        color: var(--c-c-accent-4);
      }
    }

    &[data-variant="3"] {
      color: var(--c-c-accent-12);
      margin-inline: calc(-1 * var(--c-button-s));

      &:hover {
        color: var(--c-c-accent-13);
      }
    }

    &:active {
      transform: scale(0.97);
    }
  }
</style>
